define lan = "lan"
define wan = "wan"
define server = 192.168.86.10

flush ruleset

table inet filter {
	chain input {
		type filter hook input priority filter; policy drop;
		ct state established,related accept
		iifname $lan accept
		iifname "lo" accept
		icmp type { destination-unreachable, source-quench, echo-request, time-exceeded, parameter-problem } accept
		icmpv6 type { destination-unreachable, packet-too-big, time-exceeded, parameter-problem, echo-request, nd-router-solicit, nd-router-advert, nd-neighbor-solicit, nd-neighbor-advert } accept
		udp dport 546 accept
	}

	chain output {
		type filter hook output priority filter; policy accept;
	}

	chain forward {
		type filter hook forward priority filter; policy drop;
		ct state established,related accept
		iifname $lan accept
		ip daddr $server tcp dport 22 accept
		ip daddr $server udp dport 51820 accept
	}
}

table ip nat {
	chain prerouting {
		type nat hook prerouting priority dstnat; policy accept;
		iifname $wan tcp dport 51820 dnat to $server:22
		iifname $wan udp dport 51820 dnat to $server
	}

	chain postrouting {
		type nat hook postrouting priority srcnat; policy accept;
		oifname $wan masquerade
	}
}

table ip stats {
	set forward_rx {
		type ether_addr
		size 1024
		flags dynamic,timeout
		counter
		timeout 1h
	}

	set forward_tx {
		type ether_addr
		size 1024
		flags dynamic,timeout
		counter
		timeout 1h
	}

	chain forward {
		type filter hook forward priority filter + 1; policy accept;
		iifname $wan update @forward_rx { ether daddr }
		iifname $lan update @forward_tx { ether saddr }
	}
}
