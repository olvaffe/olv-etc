#!/bin/sh

# ~800M
cli_min="
	base
	btrfs-progs
	dosfstools
	sudo
	vim
"

# ~200M
cli_base="
	bc
	git
	htop
	ldns
	logrotate
	lsof
	man-db
	openssh
	rsync
	usbutils
"

# ~100M
cli_std="
	ctags
	iw
	man-pages
	msmtp
	picocom
	strace
	tmux
	trace-cmd
	unzip
	vulkan-tools
	wireguard-tools
	zip
"

# ~450M
cli_extra="
	android-tools
	mesa-utils
	perf
"

# ~100M
cli_aur="
	nordvpn-bin
"

# ~200M
gui_min="
	alacritty
	i3status
	noto-fonts
	polkit
	sway
"

# ~150M
gui_base="
	brightnessctl
	grim
	mako
	slurp
	swayidle
	swayimg
	swaylock
	wayland-utils
	wl-clipboard
"

# ~850M
gui_std="
	fcitx5-chewing
	fcitx5-configtool
	fcitx5-gtk
	gtk4
	noto-fonts-cjk
	noto-fonts-emoji
	pipewire-pulse
"

# ~300M
gui_extra="
	cups
	mpv
	xdg-desktop-portal-gtk
	xdg-desktop-portal-wlr
"

# ~400M
gui_aur="
	google-chrome
"

# ~350M
dev_min="
	base-devel
	ccache
	meson
"

# ~450M
dev_base="
	clang
	cmake
	gdb
"

# ~250M
dev_mesa="
	glslang
	libclc
	llvm
	spirv-llvm-translator
"

# ~600M
dev_cross="
	aarch64-linux-gnu-gcc
	qemu-user-static-binfmt
"

# ~50M
hw_metal="
	zram-generator
"

# ~200M
hw_x86="
	linux
	linux-firmware-realtek
	sbctl
	systemd-ukify
	wireless-regdb
"

# ~0M
hw_arm="
	archlinuxarm-keyring
"

# ~150M
hw_t580="
	linux-firmware-intel
	intel-ucode
	iwd
	vulkan-intel
"

# ~350M
hw_xps="
	bcm20702a1-firmware
	broadcom-wl-dkms
	intel-ucode
	linux-headers
	vulkan-intel
	wpa_supplicant
"

# ~0M
hw_opi="
	seatd
"

hw_crostini="
	cros-container-guest-tools-git
	python
"

pkgs=""

host="$(uname -n)"
case "$host" in
	"t580")
		pkgs="$pkgs $cli_min $cli_base $cli_std $cli_extra $cli_aur"
		pkgs="$pkgs $gui_min $gui_base $gui_std $gui_extra $gui_aur"
		pkgs="$pkgs $dev_min $dev_base $dev_mesa $dev_cross"
		pkgs="$pkgs $hw_metal $hw_x86 $hw_t580"
		;;
	"xps")
		pkgs="$pkgs $cli_min $cli_base $cli_std $cli_extra $cli_aur"
		pkgs="$pkgs $gui_min $gui_base $gui_std $gui_extra $gui_aur"
		pkgs="$pkgs $dev_min $dev_base $dev_mesa $dev_cross"
		pkgs="$pkgs $hw_metal $hw_x86 $hw_xps"
		;;
	"opi")
		pkgs="$pkgs $cli_min $cli_base $cli_std"
		pkgs="$pkgs $gui_min"
		pkgs="$pkgs $dev_min $dev_base $dev_mesa"
		pkgs="$pkgs $hw_metal $hw_arm $hw_opi"
		;;
	"crostini")
		pkgs="$pkgs $cli_min $cli_base"
		pkgs="$pkgs $hw_crostini"
		;;
	*)
		echo "unknown device: $host"
		exit 1
		;;
esac

qeq="$(pacman -Qeq)"
if [ -n "$qeq" ]; then
	pacman -Dq --asdeps $qeq
fi

#pacman -S --needed $pkgs
pacman -Dq --asexplicit $pkgs
