#!/bin/env python

from colormath.color_objects import LabColor, XYZColor, sRGBColor
from colormath.color_conversions import convert_color
from yaml import dump

"""
The original values are:

SOLARIZED HEX     16/8 TERMCOL  XTERM/HEX   L*A*B      RGB         HSB
--------- ------- ---- -------  ----------- ---------- ----------- -----------
base03    #002b36  8/4 brblack  234 #1c1c1c 15 -12 -12   0  43  54 193 100  21
base02    #073642  0/4 black    235 #262626 20 -12 -12   7  54  66 192  90  26
base01    #586e75 10/7 brgreen  240 #585858 45 -07 -07  88 110 117 194  25  46
base00    #657b83 11/7 bryellow 241 #626262 50 -07 -07 101 123 131 195  23  51
base0     #839496 12/6 brblue   244 #808080 60 -06 -03 131 148 150 186  13  59
base1     #93a1a1 14/4 brcyan   245 #8a8a8a 65 -05 -02 147 161 161 180   9  63
base2     #eee8d5  7/7 white    254 #e4e4e4 92 -00  10 238 232 213  44  11  93
base3     #fdf6e3 15/7 brwhite  230 #ffffd7 97  00  10 253 246 227  44  10  99
yellow    #b58900  3/3 yellow   136 #af8700 60  10  65 181 137   0  45 100  71
orange    #cb4b16  9/3 brred    166 #d75f00 50  50  55 203  75  22  18  89  80
red       #dc322f  1/1 red      160 #d70000 50  65  45 220  50  47   1  79  86
magenta   #d33682  5/5 magenta  125 #af005f 50  65 -05 211  54 130 331  74  83
violet    #6c71c4 13/5 brmagenta 61 #5f5faf 50  15 -45 108 113 196 237  45  77
blue      #268bd2  4/4 blue      33 #0087ff 55 -10 -45  38 139 210 205  82  82
cyan      #2aa198  6/6 cyan      37 #00afaf 60 -35 -05  42 161 152 175  74  63
green     #859900  2/2 green     64 #5f8700 60 -20  65 133 153   0  68 100  60
green (in solarized.vim)                    60 -35  60
"""
ORIGINAL_SOLARIZED_PALETTE = {
    'base03':   LabColor(15, -12, -12), # bg
    'base02':   LabColor(20, -12, -12), # bg highlight, ui bg
    'base01':   LabColor(45,  -7,  -7), # secondary fg
    'base00':   LabColor(50,  -7,  -7), # ui fg
    'base0':    LabColor(60,  -6,  -3), # fg
    'base1':    LabColor(65,  -5,  -2), # fg highlight
    'base2':    LabColor(92,   0,  10), # unused in dark mode
    'base3':    LabColor(97,   0,  10), # unused in dark mode
    'yellow':   LabColor(60,  10,  65),
    'orange':   LabColor(50,  50,  55),
    'red':      LabColor(50,  65,  45),
    'magenta':  LabColor(50,  65,  -5),
    'violet':   LabColor(50,  15, -45),
    'blue':     LabColor(55, -10, -45),
    'cyan':     LabColor(60, -35,  -5),
    'green':    LabColor(60, -20,  65),
}

MODIFIED_SOLARIZED_PALETTE = {
    # reduce lumi by 15 for bg; use grayscale
    'base03':   LabColor(  0,   0,   0),
    'base02':   LabColor(  5,   0,   0),
    'base01':   LabColor( 30,   0,   0),
    # keep lumi for secondary fg; use grayscale
    'base00':   LabColor( 50,   0,   0),
    # increase lumi by 10 for fg; use grayscale
    'base0':    LabColor( 70,   0,   0),
    'base1':    LabColor( 75,   0,   0),
    'base2':    LabColor(100,   0,   0),
    'base3':    LabColor(100,   0,   0),
    # target the same lumi as base1 for colors
    'yellow':   LabColor( 75,  10,  65),
    'orange':   LabColor( 74,  50,  55),
    'red':      LabColor( 68,  65,  45),
    'magenta':  LabColor( 72,  65,  -5),
    'violet':   LabColor( 75,  15, -45),
    'blue':     LabColor( 75, -10, -45),
    'cyan':     LabColor( 75, -35,  -5),
    # use new green value
    'green':    LabColor( 75, -35,  60),
}

BASE16_MAP = {
    'base00': 'base03',  # bg (ANSI black)
    'base01': 'base02',  # bg highlight
    'base02': 'base01',  # ui bg
    'base03': 'base00',  # secondary fg (ANSI bright black)
    'base04': 'base0',   # ui fg
    'base05': 'base1',   # fg (ANSI white)
    'base06': 'base2',   # unused
    'base07': 'base3',   # fg highlight (ANSI bright white)

    'base08': 'red',     # ANSI normal and brigt red
    'base09': 'orange',
    'base0A': 'yellow',  # ANSI normal and brigt yellow
    'base0B': 'green',   # ANSI normal and brigt green
    'base0C': 'cyan',    # ANSI normal and brigt cyan
    'base0D': 'blue',    # ANSI normal and brigt blue
    'base0E': 'magenta', # ANSI normal and brigt magenta
    'base0F': 'violet',
}

ANSI_MAP = {
    'black': 'base00',
    'red': 'base08',
    'green': 'base0B',
    'yellow': 'base0A',
    'blue': 'base0D',
    'magenta': 'base0E',
    'cyan': 'base0C',
    'white': 'base05',
    'bright-black': 'base03',
    'bright-red': 'base08',
    'bright-green': 'base0B',
    'bright-yellow': 'base0A',
    'bright-blue': 'base0D',
    'bright-magenta': 'base0E',
    'bright-cyan': 'base0C',
    'bright-white': 'base07',
}

base16_palette = {}
for base16, solarized in BASE16_MAP.items():
    lab = MODIFIED_SOLARIZED_PALETTE[solarized]
    xyz = convert_color(lab, XYZColor)
    rgb = convert_color(xyz, sRGBColor)

    vals = rgb.get_value_tuple()
    if max(vals) > 1.1 or min(vals) < -0.1:
        raise Exception(f'solarized {solarized} is {vals}')

    clamped = sRGBColor(rgb.clamped_rgb_r, rgb.clamped_rgb_g,
                        rgb.clamped_rgb_b)
    base16_palette[base16] = clamped.get_rgb_hex()

ansi_palette = {}
for ansi, base16 in ANSI_MAP.items():
    ansi_palette[ansi] = base16_palette[base16]

base16_yaml = {
    'scheme': 'Solarized Dark Modified',
    'author': 'Chia-I Wu',
}
base16_yaml.update(base16_palette)

alacritty_yaml = {
    'colors': {
        'primary': {
        },
        'normal': {
        },
        'bright': {
        },
    },
}

alacritty_yaml['colors']['primary']['background'] = ansi_palette['black']
alacritty_yaml['colors']['primary']['foreground'] = ansi_palette['white']

for name, color in ansi_palette.items():
    if name.startswith('bright-'):
        name = name[7:]
        intensity = 'bright'
    else:
        intensity = 'normal'

    alacritty_yaml['colors'][intensity][name] = color

print('base16 color scheme:')
print(dump(base16_yaml))
print
print('alacritty config:')
print(dump(alacritty_yaml))
print
print('vim config:')
for name, color in base16_palette.items():
    print(f'let s:gui{name[4:]}        = "{color[1:]}"')
